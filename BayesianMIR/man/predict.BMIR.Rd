% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BMIRinfer.R
\name{predict.BMIR}
\alias{predict.BMIR}
\title{Prediction for the Bayesian Muliple Instance Regression Model}
\usage{
\method{predict}{BMIR}(BMIRchain, pip, tidydata, newtidydata, k = 1)
}
\arguments{
\item{BMIRchain}{One of the Markov chains \code{mcmclist} from \code{\link{BMIR_sampler}}.}

\item{pip}{One of columns of \code{pip} from \code{\link{BMIR_sampler}}.}

\item{tidydata}{A list created from \code{\link{Tidydata}} used in model training.}

\item{newtidydata}{A list created from \code{\link{Tidydata}} only using \code{feature_inst}.}

\item{k}{Numeric. The number of primary instances in each bag. Default is $1$.}
}
\value{
A list with components:
\item{newtidydata}{\code{newtidydata} appended with predicted labels (in \code{label}), predicted posterior inclusion probability (in \code{predpip}), and  predicted binary indicators (in \code{predind})}.
}
\description{
Predict primary instances and labels in new samples (bags).
}
\examples{
## Basic set-up
nsample <- 200 # 100 for training, 100 for test
ninst <- 5
nprime <- 1 # do not change
nfeature <- 1

## Generate synthetic data
set.seed(6)
npoint <- (ninst - nprime) * nfeature
bag <- list()
for(i in 1:nsample){
  prime_inst <- matrix(runif(nfeature, -5, 5), ncol = nfeature)
  nonprime_inst <- matrix(c(rnorm(npoint, -5, 1),
                            rnorm(npoint, 5, 1)),
                          nrow = 2, byrow = TRUE)
  nonprime_inst <- nonprime_inst[cbind(sample(1:2, npoint, replace = TRUE), 1:npoint)]
  nonprime_inst <- matrix(nonprime_inst, ncol = nfeature, byrow = FALSE)
  bag[[i]] <- as.data.frame(rbind(prime_inst, nonprime_inst))
}
beta_true <- rep(2, nfeature + 1)
label <- unlist(lapply(bag, function(feature){
  beta_true[1] + as.matrix(feature[1,,drop = FALSE]) \%*\% beta_true[-1]
}))
label <- label + rnorm(nsample, mean = 0, sd = 1)

## Tidy data
### Try MIScatterPlot function to visualize the data
tidydata <- Tidy_dataset(label = label[1:100],
                         feature_inst = bag[1:100])
newtidydata <- Tidy_dataset(feature_inst = bag[-(1:100)])

## BMIR model fitting
BMIR_fit <- BMIR_sampler(ntotal = 1000, tidydata = tidydata)

## Prediction in new bags
pred_fit <- predict.BMIR(BMIRchain = BMIR_fit$mcmclist$Chain1, 
                         pip = BMIR_fit$pip[,1], 
                         tidydata = tidydata, 
                         newtidydata = newtidydata, 
                         k = 1)
ggplot2::ggplot(data = data.frame(pred = pred_fit$newtidydata$label, 
                         true = label[-(1:100)]), 
       mapping = ggplot2::aes(x = pred, y = true)) + 
  ggplot2::geom_point() + ggplot2::geom_abline(intercept = 0, slope = 1, color = "red")
}
