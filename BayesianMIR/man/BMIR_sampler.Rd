% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BMIRfitting.R
\name{BMIR_sampler}
\alias{BMIR_sampler}
\title{The Bayesian Muliple Instance Regression model}
\usage{
BMIR_sampler(ntotal = 1e+05, nwarm = ntotal/2, nthin = 1,
  nchain = 1, tidydata, return_delta = FALSE)
}
\arguments{
\item{ntotal}{Total number of samplings. Default is \code{100000}.}

\item{nwarm}{Number of iterations used in burn-in steps. Default is \code{ntotal / 2}.}

\item{nthin}{The thinning interval. Default is \code{1}.}

\item{nchain}{The number of the Markov chains. Default is $1$.}

\item{tidydata}{A list created from \code{\link{Tidy_dataset}}.}

\item{return_delta}{Logical. Whether to return binary indicators.}
}
\value{
A list with components:
\item{mcmclist}{A list of class \code{mcmc} from \code{coda}.}
\item{pip}{A matrix with each column having the posterior inclusion probability of each instance, which indicates the probability of being a primary instance in a bag. There are \code{nchain} columns.}
}
\description{
Generate the Monte Carlo Markov Chain samples from the specified Bayesian model.
}
\examples{
## Basic set-up
nsample <- 100
ninst <- 5
nprime <- 1 # do not change
nfeature <- 1

## Generate synthetic data
set.seed(6)
npoint <- (ninst - nprime) * nfeature
bag <- list()
for(i in 1:nsample){
  prime_inst <- matrix(runif(nfeature, -5, 5), ncol = nfeature)
  nonprime_inst <- matrix(c(rnorm(npoint, -5, 1),
                            rnorm(npoint, 5, 1)),
                          nrow = 2, byrow = TRUE)
  nonprime_inst <- nonprime_inst[cbind(sample(1:2, npoint, replace = TRUE), 1:npoint)]
  nonprime_inst <- matrix(nonprime_inst, ncol = nfeature, byrow = FALSE)
  bag[[i]] <- as.data.frame(rbind(prime_inst, nonprime_inst))
}
beta_true <- rep(2, nfeature + 1)
label <- unlist(lapply(bag, function(feature){
  beta_true[1] + as.matrix(feature[1,,drop = FALSE]) \%*\% beta_true[-1]
}))
label <- label + rnorm(nsample, mean = 0, sd = 1)

## Tidy data
### Try MIScatterPlot function to visualize the data
tidydata <- Tidy_dataset(label = label,
                         feature_inst = bag)
                         
## BMIR model fitting
BMIR_fit <- BMIR_sampler(ntotal = 1000, tidydata = tidydata)
}
